import{_ as s,o as l,c as a,O as n}from"./chunks/framework.eb2f041d.js";const u=JSON.parse('{"title":"脚手架","description":"","frontmatter":{},"headers":[],"relativePath":"cli.md","filePath":"cli.md"}'),e={name:"cli.md"},o=n(`<h1 id="脚手架" tabindex="-1">脚手架 <a class="header-anchor" href="#脚手架" aria-label="Permalink to &quot;脚手架&quot;">​</a></h1><ul><li>可以更高效更规范的实现前后端代码，只适用于zj-admin前后端，异常优雅~</li><li>其实就是用handlebars做的一个模板编译器，也可以灵活改一改做其他的东西~</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm install zhangjincli </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g</span></span></code></pre></div><h2 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-label="Permalink to &quot;指令&quot;">​</a></h2><ul><li>zj --help 查看所有指令</li><li>zj init templates初始化模板</li><li>zj init models初始化测试数据</li><li>zj config 参考npm的指令增改查脚手架的配置文件</li><li>zj show logs 查看log</li><li>zj compile ./models 编译指定目录，只编译前端vue文件</li><li>zj compilefb ./models 编译指定目录，前后端都编译</li><li>zj compile ./models -v3 指令中添加-v3，则输出为vue3版本</li></ul><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><ul><li>前端vue+element，后端nestjs</li><li>.json为前端数据模型，_b.json为后端数据模型</li><li>前端编译vue版本通过设置-v2或--vue2指定为vue2版本，-v3或--vue3指定为vue3版本</li></ul><h2 id="hello-world" tabindex="-1">hello world <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;hello world&quot;">​</a></h2><p>其实代码中已经添加了相当丰富的回复互动，可以一步步按提示来~</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 第一步，生成测试数据，数据模型都很简单</span></span>
<span class="line"><span style="color:#A6ACCD;">zj init models</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第二步，这里其实可以直接zj compile ./models或者 zj compilefb ./models，然后一步步按提示来</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 下面按标准流程介绍</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第二步，生成前后端的编译模板</span></span>
<span class="line"><span style="color:#A6ACCD;">zj init templates</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第三步，编译</span></span>
<span class="line"><span style="color:#A6ACCD;">zj compile </span><span style="color:#89DDFF;">./</span><span style="color:#A6ACCD;">models </span><span style="color:#676E95;font-style:italic;">// 只编译前端</span></span>
<span class="line"><span style="color:#A6ACCD;">zj compilefb </span><span style="color:#89DDFF;">./</span><span style="color:#A6ACCD;">models </span><span style="color:#676E95;font-style:italic;">// 前后端同时编译</span></span>
<span class="line"><span style="color:#A6ACCD;">zj compile </span><span style="color:#89DDFF;">./</span><span style="color:#A6ACCD;">models </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">vue3 </span><span style="color:#676E95;font-style:italic;">// 指定前端编译为vue3版本，就是带compose api的，--vue2或-v2则编译为vue2版本，默认为vue2版本</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或</span></span>
<span class="line"><span style="color:#A6ACCD;">zj compile </span><span style="color:#89DDFF;">./</span><span style="color:#A6ACCD;">models </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 编译完就完事了，不出意外应该有一个page和一个server文件夹</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第四步，把page中的文件复制到\\web\\src\\views中，在运行起来的项目里，系统管理--菜单管理中添加相应路由即可</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 第五步，把server中的文件复制到\\server\\src\\modules中，在app.module.ts中引入，需要swagger则去main.ts中添加</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 查看LOG，爱看不看</span></span>
<span class="line"><span style="color:#A6ACCD;">zj show logs</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 脚手架仿npm，做了一个zj config功能，zj config set aaa bbb，zj config reset，zj config list，可修改默认编译目录，就是上面的page和server文件夹名，其实没什么卵用~</span></span></code></pre></div>`,11),t=[o];function p(i,c,r,d,y,m){return l(),a("div",null,t)}const C=s(e,[["render",p]]);export{u as __pageData,C as default};
